version: "3.8"

services:
  # nginx
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "7771:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./api:/var/www/api
    networks:
      - api-network

  # api
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: php:7.4-fpm
    working_dir: /var/www/api
    restart: unless-stopped
    environment:
      SERVICE_NAME: api
    working_dir: /var/www/api
    volumes:
      - ./api:/var/www/api
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local/ini
    networks:
      - api-network
    depends_on:
      - db

  # app
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: node:14.16.0
    working_dir: /home/node/app
    environment:
      SERVICE_NAME: app
    volumes:
      - ./app:/home/node/app
    ports:
      - "7770:7770"
    networks:
      - api-network
    depends_on:
      - api

  # db
  db:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      # MYSQL_DATABASE: xyz
      MYSQL_ROOT_PASSWORD: password
      # MYSQL_USER: xyz
      # MYSQL_PASSWORD: password
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - api-network

# network
networks:
  api-network:
    driver: bridge

# volume
volumes:
  dbdata:
    driver: local
